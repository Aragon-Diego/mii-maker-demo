/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/assets/models/miiBodyM_switch.glb 
*/

import React, { useEffect } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function MiiBodyM(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('./assets/models/bodyM.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  console.log("ðŸš€ ~ MiiBodyM ~ materials:", materials)
  materials.mt_body.color.g = 1;
  const { actions, names } = useAnimations(animations, group)
  console.log("ðŸš€ ~ MiiBodyM ~ names:", names)
  useEffect(()=>{
    actions[names[1]].reset().play();
  }, []);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="m" rotation={[Math.PI / 2, 0, 0]} scale={0.05} position={[0,-3,0]}>
          <primitive object={nodes.TopL} />
          <skinnedMesh name="body_m" geometry={nodes.body_m.geometry} material={materials.mt_body} skeleton={nodes.body_m.skeleton} />
          <skinnedMesh name="legs_m" geometry={nodes.legs_m.geometry} material={materials.mt_pants} skeleton={nodes.legs_m.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('./assets/models/bodyM.glb')
